@page "/translate"
@using System.ComponentModel.DataAnnotations
@inject TranslateApp.TranslationService TranslateService
@using TranslateApp
@using System.Text.Json
@inject HttpClient Http
...

<h1>Translate Language</h1>

<EditForm Model="TranslationInput" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="textToTranslate">Text to Translate:</label>
        <InputTextArea id="textToTranslate" @bind-Value="TranslationInput.TextToTranslate" class="form-control" />
    </div>

    <div class="form-group">
        <label for="targetLanguage">Target Language:</label>
        <InputSelect id="targetLanguage" @bind-Value="TranslationInput.TargetLanguage" class="form-control">
           
                <option value="en">English</option>
                <option value="es">Spanish</option>
                <option value="fr">French</option>
                <option value="de">German</option>
                <option value="it">Italian</option>
                <option value="pt">Portuguese</option>
            
        </InputSelect>
    </div>

    <button type="submit" class="btn btn-primary">Translate</button>

</EditForm>

@if (!string.IsNullOrEmpty(TranslationResult))
{
    <div class="alert alert-success mt-3">
        <strong>Translation Result:</strong> @TranslationResult
    </div>
}

@code {
    private TranslationInputModel TranslationInput = new TranslationInputModel();

    private string? TranslationResult;

    

    public class Language
    {
        public string? Code { get; set; }
        public string? Name { get; set; }
    }


    private async Task HandleValidSubmit()
    {
        TranslationResult = await TranslateService.TranslateTextAsync(TranslationInput.TextToTranslate, TranslationInput.TargetLanguage);
    }

}


